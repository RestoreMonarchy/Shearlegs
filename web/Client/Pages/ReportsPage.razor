@page "/reports"

@if (Reports != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>Enabled</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var report in Reports)
            {
                <tr>
                    <td>@report.Id</td>
                    <td>@report.Name</td>
                    <td>@report.Description</td>
                    <td>@report.Enabled</td>
                </tr>

            }
        </tbody>
    </table>

    <div class="bg-light mt-3 p-4">
        <h1>Generate Report</h1>
        <select class="form-select" @bind="@selectedReportId">
            @foreach (var report in Reports)
            {
                <option value="@report.Id">@report.Name</option>
            }
        </select>

        <div class="form-floating mt-3">
            <textarea class="form-control" style="height: 300px;" @bind="json" />
            <label>Report Parameters (json)</label>
        </div>

        <button class="btn btn-primary mt-3" @onclick="GenerateReportAsync" disabled="@(selectedReportId == default)">Generate Report</button>
    </div>

    <div class="mt-5">
        @if (reportArchive != null)
        {
            <a class="btn btn-primary" href="/api/reports/archive/@reportArchive.Id/file">Download @reportArchive.Name</a>
        }
    </div>


    <div class="bg-light mt-3 p-4">

        <h1>Add Report</h1>

        <EditForm OnValidSubmit="AddReportAsync" Model="ReportModel" class="mt-3">
            <div class="mb-3">
                <label class="form-label">Name</label>
                <InputText @bind-Value="ReportModel.Name" class="form-control" />
            </div>
            <div class="mb-3">
                <label class="form-label">Description</label>
                <InputTextArea @bind-Value="ReportModel.Description" class="form-control" rows="3" />
            </div>
            <div class="form-check mb-3">
                <InputCheckbox @bind-Value="ReportModel.Enabled" class="form-check-input" />
                <label class="form-check-label">
                    Enabled
                </label>
            </div>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>
    </div>
}


@code {
    [Inject]
    public HttpClient HttpClient { get; set; }


    private int selectedReportId;
    private string json;

    private ReportArchiveModel reportArchive;


    private ReportModel ReportModel { get; set; } = new ReportModel();

    private ReportPluginModel ReportPluginModel { get; set; } = new ReportPluginModel();

    public List<ReportModel> Reports { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Reports = await HttpClient.GetFromJsonAsync<List<ReportModel>>("api/reports");
    }

    public async Task AddPluginReportAsync()
    {
        var response = await HttpClient.PostAsJsonAsync("api/reports/plugin", ReportPluginModel);
        var reportPlugin = await response.Content.ReadFromJsonAsync<ReportPluginModel>();

        var report = Reports.SingleOrDefault(x => x.Id == reportPlugin.Id);

        report.Plugin = reportPlugin;

        ReportPluginModel = new ReportPluginModel();
    }

    public async Task AddReportAsync()
    {
        var response = await HttpClient.PostAsJsonAsync("api/reports", ReportModel);
        Reports.Add(await response.Content.ReadFromJsonAsync<ReportModel>());
        ReportModel = new ReportModel();
    }


    public async Task GenerateReportAsync()
    {
        var response = await HttpClient.PostAsync($"api/reports/{selectedReportId}", new StringContent(json));
        reportArchive = await response.Content.ReadFromJsonAsync<ReportArchiveModel>();
    }
}
